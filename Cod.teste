class Task:
    def __init__(self, title, description, deadline):
        self.title = title
        self.description = description
        self.deadline = deadline
        self.status = 'Pendente'

    def edit(self, title=None, description=None, deadline=None, status=None):
        if title:
            self.title = title
        if description:
            self.description = description
        if deadline:
            self.deadline = deadline
        if status:
            self.status = status

    def __str__(self):
        return f"Título: {self.title}\nDescrição: {self.description}\nPrazo: {self.deadline}\nStatus: {self.status}\n"

class TaskManager:
    def __init__(self):
        self.tasks = []

    def add_task(self):
        title = input("Título da tarefa: ")
        description = input("Descrição da tarefa: ")
        deadline = input("Prazo da tarefa (formato: dd/mm/aaaa): ")
        task = Task(title, description, deadline)
        self.tasks.append(task)
        print("Tarefa adicionada com sucesso!\n")

    def list_tasks(self):
        if not self.tasks:
            print("Nenhuma tarefa encontrada!\n")
        else:
            for idx, task in enumerate(self.tasks, 1):
                print(f"Tarefa {idx}:\n{task}")
    
    def edit_task(self):
        self.list_tasks()
        try:
            task_id = int(input("Digite o número da tarefa a ser editada: ")) - 1
            if 0 <= task_id < len(self.tasks):
                print("\nDigite os novos dados (pressione Enter para manter o valor atual):")
                title = input(f"Título atual: {self.tasks[task_id].title} / Novo título: ")
                description = input(f"Descrição atual: {self.tasks[task_id].description} / Nova descrição: ")
                deadline = input(f"Prazo atual: {self.tasks[task_id].deadline} / Novo prazo: ")
                status = input(f"Status atual: {self.tasks[task_id].status} / Novo status: ")
                
                self.tasks[task_id].edit(
                    title if title else None,
                    description if description else None,
                    deadline if deadline else None,
                    status if status else None
                )
                print("Tarefa editada com sucesso!\n")
            else:
                print("Tarefa não encontrada!\n")
        except ValueError:
            print("Entrada inválida. Tente novamente.\n")

    def delete_task(self):
        self.list_tasks()
        try:
            task_id = int(input("Digite o número da tarefa a ser excluída: ")) - 1
            if 0 <= task_id < len(self.tasks):
                del self.tasks[task_id]
                print("Tarefa excluída com sucesso!\n")
            else:
                print("Tarefa não encontrada!\n")
        except ValueError:
            print("Entrada inválida. Tente novamente.\n")

    def show_menu(self):
        while True:
            print("\n--- Gerenciador de Tarefas ---")
            print("1. Adicionar tarefa")
            print("2. Listar tarefas")
            print("3. Editar tarefa")
            print("4. Excluir tarefa")
            print("5. Sair")
            choice = input("Escolha uma opção: ")

            if choice == '1':
                self.add_task()
            elif choice == '2':
                self.list_tasks()
            elif choice == '3':
                self.edit_task()
            elif choice == '4':
                self.delete_task()
            elif choice == '5':
                print("Saindo do Gerenciador de Tarefas...")
                break
            else:
                print("Opção inválida. Tente novamente.")

if __name__ == "__main__":
    task_manager = TaskManager()
    task_manager.show_menu()
